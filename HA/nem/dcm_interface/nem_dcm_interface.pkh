CREATE OR REPLACE PACKAGE nem_dcm_interface
AS
  -------------------------------------------------------------------------
  --   PVCS Identifiers :-
  --
  --       PVCS id          : $Header:   //new_vm_latest/archives/customer/HA/nem/dcm_interface/nem_dcm_interface.pkh-arc   1.0   Aug 18 2016 12:08:12   Peter.Bibby  $
  --       Module Name      : $Workfile:   nem_dcm_interface.pkh  $
  --       Date into PVCS   : $Date:   Aug 18 2016 12:08:12  $
  --       Date fetched Out : $Modtime:   Aug 12 2016 14:38:28  $
  --       Version          : $Revision:   1.0  $
  --       Based on SCCS version :
  ------------------------------------------------------------------
  --   Copyright (c) 2013 Bentley Systems Incorporated. All rights reserved.
  ------------------------------------------------------------------
  --g_sccsid is the SCCS ID for the package
  g_sccsid                CONSTANT VARCHAR2 (2000) := '$Revision:   1.0  $';
  --
  c_datetimefmt           CONSTANT VARCHAR2(50) := 'dd-Mon-yyyy hh24:mi:ss'; 
  c_datefmt               CONSTANT VARCHAR2(50) := 'dd-Mon-yyyy';   
  c_dcm_export_dir        CONSTANT hig_directories.hdir_name%TYPE := 'NEM_DCM_EXPORT';
  c_dcm_results_dir       CONSTANT hig_directories.hdir_name%TYPE := 'NEM_DCM_RESULTS';  
  c_dcm_export_ftptype    CONSTANT hig_ftp_types.hft_type%TYPE := 'NEM_DCM_EXPORT_FILE';  
  c_results_process_type_name    CONSTANT VARCHAR2(30)   := 'NEM DCM Results Import';
  c_results_file_type_name       CONSTANT VARCHAR2(30)   := 'NEM DCM RESULTS FILE';  
  c_export_process_type_name     CONSTANT VARCHAR2(30)   := 'NEM DCM Export';
  c_export_file_type_name        CONSTANT VARCHAR2(30)   := 'NEM DCM EXPORT FILE';    
  --
  TYPE ftp_con_rec IS RECORD(conn_id   hig_ftp_connections.hfc_id%TYPE
                            ,username  hig_ftp_connections.hfc_ftp_username%TYPE
                            ,password  hig_ftp_connections.hfc_ftp_password%TYPE
                            ,hostname  hig_ftp_connections.hfc_ftp_host%TYPE
                            ,port      hig_ftp_connections.hfc_ftp_port%TYPE
                            ,out_dir   hig_ftp_connections.hfc_ftp_out_dir%TYPE);
  --
  TYPE nem_event_rec IS RECORD(nevt_id                nm_inv_items_all.iit_ne_id%TYPE
                              ,description            VARCHAR2(500)
                              ,event_number           NUMBER
                              ,event_type             VARCHAR2(500)
                              ,event_status           VARCHAR2(500)
                              ,planned_start_date     DATE
                              ,planned_complete_date  DATE
                              ,actual_start_date      DATE
                              ,actual_complete_date   DATE
                              ,version_number         NUMBER
                              ,nature_of_works        VARCHAR2(500)
                              ,distribute             VARCHAR2(500)
                              ,delay                  VARCHAR2(500)
                              ,notes                  VARCHAR2(500)
                              ,user_responsible       VARCHAR2(500)
                              ,he_ref                 VARCHAR2(500)
                              ,works_ref              VARCHAR2(500)
                              ,mobile_lane_closure    VARCHAR2(500)
                              ,last_modified          DATE);
  TYPE nem_event_tab IS TABLE OF nem_event_rec INDEX BY BINARY_INTEGER;
  --
  --
  -----------------------------------------------------------------------------
  --
  FUNCTION get_version
    RETURN VARCHAR2;

  --
  -----------------------------------------------------------------------------
  --
  FUNCTION get_body_version
    RETURN VARCHAR2;
  --
  -----------------------------------------------------------------------------
  --    
  PROCEDURE queue_dcm(pi_nevt_id IN nem_events.nevt_id%TYPE
                     ,pi_naex_id IN nem_action_executions.naex_id%TYPE);                     
  --
  -----------------------------------------------------------------------------
  --
  PROCEDURE export_event_for_dcm(pi_dcmq nem_dcm_queue%ROWTYPE);
  --
  -----------------------------------------------------------------------------
  --
  PROCEDURE export_dcm_queue;                                
  --
  -----------------------------------------------------------------------------
  --
  PROCEDURE import_dcm_results; 
  --
  -----------------------------------------------------------------------------
  --  
END nem_dcm_interface;
/