SET DEFINE OFF;
MERGE INTO IM_PODS A USING
 (SELECT
  4019 as IP_ID,
  'WPR_4_1_4_TOP_4A' as IP_HMO_MODULE,
  'Report Set 1 (4A)' as IP_TITLE,
  '% Find & fix/report defects completed against target time.' as IP_DESCR,
  NULL as IP_PARENT_POD_ID,
  'Y' as IP_DRILL_DOWN,
  'Table' as IP_TYPE,
  'Performance Reports' as IP_GROUP,
  '% Find & fix/report defects completed against target time.' as IP_HEADER,
  NULL as IP_FOOTER,
  0 as IP_CACHE_TIME
  FROM DUAL) B
ON (A.IP_ID = B.IP_ID)
WHEN NOT MATCHED THEN 
INSERT (
  IP_ID, IP_HMO_MODULE, IP_TITLE, IP_DESCR, IP_PARENT_POD_ID, 
  IP_DRILL_DOWN, IP_TYPE, IP_GROUP, IP_HEADER, IP_FOOTER, 
  IP_CACHE_TIME)
VALUES (
  B.IP_ID, B.IP_HMO_MODULE, B.IP_TITLE, B.IP_DESCR, B.IP_PARENT_POD_ID, 
  B.IP_DRILL_DOWN, B.IP_TYPE, B.IP_GROUP, B.IP_HEADER, B.IP_FOOTER, 
  B.IP_CACHE_TIME)
WHEN MATCHED THEN
UPDATE SET 
  A.IP_HMO_MODULE = B.IP_HMO_MODULE,
  A.IP_TITLE = B.IP_TITLE,
  A.IP_DESCR = B.IP_DESCR,
  A.IP_PARENT_POD_ID = B.IP_PARENT_POD_ID,
  A.IP_DRILL_DOWN = B.IP_DRILL_DOWN,
  A.IP_TYPE = B.IP_TYPE,
  A.IP_GROUP = B.IP_GROUP,
  A.IP_HEADER = B.IP_HEADER,
  A.IP_FOOTER = B.IP_FOOTER,
  A.IP_CACHE_TIME = B.IP_CACHE_TIME;

MERGE INTO IM_PODS A USING
 (SELECT
  4020 as IP_ID,
  'WPR_4_1_4_DD1_4A' as IP_HMO_MODULE,
  'Community Area: &P6_PARAM2. for &P6_PARAM3.' as IP_TITLE,
  '% Find & fix/report defects completed against target time.' as IP_DESCR,
  'WPR_4_1_4_TOP_4A' as IP_PARENT_POD_ID,
  'N' as IP_DRILL_DOWN,
  'Table' as IP_TYPE,
  'Performance Reports' as IP_GROUP,
  '% Find & fix/report defects completed against target time.' as IP_HEADER,
  NULL as IP_FOOTER,
  0 as IP_CACHE_TIME
  FROM DUAL) B
ON (A.IP_ID = B.IP_ID)
WHEN NOT MATCHED THEN 
INSERT (
  IP_ID, IP_HMO_MODULE, IP_TITLE, IP_DESCR, IP_PARENT_POD_ID, 
  IP_DRILL_DOWN, IP_TYPE, IP_GROUP, IP_HEADER, IP_FOOTER, 
  IP_CACHE_TIME)
VALUES (
  B.IP_ID, B.IP_HMO_MODULE, B.IP_TITLE, B.IP_DESCR, B.IP_PARENT_POD_ID, 
  B.IP_DRILL_DOWN, B.IP_TYPE, B.IP_GROUP, B.IP_HEADER, B.IP_FOOTER, 
  B.IP_CACHE_TIME)
WHEN MATCHED THEN
UPDATE SET 
  A.IP_HMO_MODULE = B.IP_HMO_MODULE,
  A.IP_TITLE = B.IP_TITLE,
  A.IP_DESCR = B.IP_DESCR,
  A.IP_PARENT_POD_ID = B.IP_PARENT_POD_ID,
  A.IP_DRILL_DOWN = B.IP_DRILL_DOWN,
  A.IP_TYPE = B.IP_TYPE,
  A.IP_GROUP = B.IP_GROUP,
  A.IP_HEADER = B.IP_HEADER,
  A.IP_FOOTER = B.IP_FOOTER,
  A.IP_CACHE_TIME = B.IP_CACHE_TIME;

MERGE INTO IM_PODS A USING
 (SELECT
  4021 as IP_ID,
  'WPR_4_1_4_TOP_4B' as IP_HMO_MODULE,
  'Report Set 1 (4B)' as IP_TITLE,
  'Average number of days to complete find & fix/report defects' as IP_DESCR,
  NULL as IP_PARENT_POD_ID,
  'Y' as IP_DRILL_DOWN,
  'Table' as IP_TYPE,
  'Performance Reports' as IP_GROUP,
  'Average number of days to complete find & fix/report defects' as IP_HEADER,
  NULL as IP_FOOTER,
  0 as IP_CACHE_TIME
  FROM DUAL) B
ON (A.IP_ID = B.IP_ID)
WHEN NOT MATCHED THEN 
INSERT (
  IP_ID, IP_HMO_MODULE, IP_TITLE, IP_DESCR, IP_PARENT_POD_ID, 
  IP_DRILL_DOWN, IP_TYPE, IP_GROUP, IP_HEADER, IP_FOOTER, 
  IP_CACHE_TIME)
VALUES (
  B.IP_ID, B.IP_HMO_MODULE, B.IP_TITLE, B.IP_DESCR, B.IP_PARENT_POD_ID, 
  B.IP_DRILL_DOWN, B.IP_TYPE, B.IP_GROUP, B.IP_HEADER, B.IP_FOOTER, 
  B.IP_CACHE_TIME)
WHEN MATCHED THEN
UPDATE SET 
  A.IP_HMO_MODULE = B.IP_HMO_MODULE,
  A.IP_TITLE = B.IP_TITLE,
  A.IP_DESCR = B.IP_DESCR,
  A.IP_PARENT_POD_ID = B.IP_PARENT_POD_ID,
  A.IP_DRILL_DOWN = B.IP_DRILL_DOWN,
  A.IP_TYPE = B.IP_TYPE,
  A.IP_GROUP = B.IP_GROUP,
  A.IP_HEADER = B.IP_HEADER,
  A.IP_FOOTER = B.IP_FOOTER,
  A.IP_CACHE_TIME = B.IP_CACHE_TIME;

MERGE INTO IM_PODS A USING
 (SELECT
  4022 as IP_ID,
  'WPR_4_1_4_DD1_4B' as IP_HMO_MODULE,
  'Community Area: &P6_PARAM2. for &P6_PARAM3.' as IP_TITLE,
  'Average end to end times(days) of completed tickets(works Order Date Instructed - Date Completed date)' as IP_DESCR,
  'WPR_4_1_4_TOP_4B' as IP_PARENT_POD_ID,
  'N' as IP_DRILL_DOWN,
  'Table' as IP_TYPE,
  'Performance Reports' as IP_GROUP,
  'Average number of days to complete find & fix/report defects' as IP_HEADER,
  NULL as IP_FOOTER,
  0 as IP_CACHE_TIME
  FROM DUAL) B
ON (A.IP_ID = B.IP_ID)
WHEN NOT MATCHED THEN 
INSERT (
  IP_ID, IP_HMO_MODULE, IP_TITLE, IP_DESCR, IP_PARENT_POD_ID, 
  IP_DRILL_DOWN, IP_TYPE, IP_GROUP, IP_HEADER, IP_FOOTER, 
  IP_CACHE_TIME)
VALUES (
  B.IP_ID, B.IP_HMO_MODULE, B.IP_TITLE, B.IP_DESCR, B.IP_PARENT_POD_ID, 
  B.IP_DRILL_DOWN, B.IP_TYPE, B.IP_GROUP, B.IP_HEADER, B.IP_FOOTER, 
  B.IP_CACHE_TIME)
WHEN MATCHED THEN
UPDATE SET 
  A.IP_HMO_MODULE = B.IP_HMO_MODULE,
  A.IP_TITLE = B.IP_TITLE,
  A.IP_DESCR = B.IP_DESCR,
  A.IP_PARENT_POD_ID = B.IP_PARENT_POD_ID,
  A.IP_DRILL_DOWN = B.IP_DRILL_DOWN,
  A.IP_TYPE = B.IP_TYPE,
  A.IP_GROUP = B.IP_GROUP,
  A.IP_HEADER = B.IP_HEADER,
  A.IP_FOOTER = B.IP_FOOTER,
  A.IP_CACHE_TIME = B.IP_CACHE_TIME;

MERGE INTO IM_PODS A USING
 (SELECT
  4023 as IP_ID,
  'WPR_4_1_5_TOP_5A' as IP_HMO_MODULE,
  'Report Set 1 (5A)' as IP_TITLE,
  'Average number of days to complete potholes.' as IP_DESCR,
  NULL as IP_PARENT_POD_ID,
  'Y' as IP_DRILL_DOWN,
  'Table' as IP_TYPE,
  'Performance Reports' as IP_GROUP,
  'Average number of days to complete potholes.' as IP_HEADER,
  NULL as IP_FOOTER,
  0 as IP_CACHE_TIME
  FROM DUAL) B
ON (A.IP_ID = B.IP_ID)
WHEN NOT MATCHED THEN 
INSERT (
  IP_ID, IP_HMO_MODULE, IP_TITLE, IP_DESCR, IP_PARENT_POD_ID, 
  IP_DRILL_DOWN, IP_TYPE, IP_GROUP, IP_HEADER, IP_FOOTER, 
  IP_CACHE_TIME)
VALUES (
  B.IP_ID, B.IP_HMO_MODULE, B.IP_TITLE, B.IP_DESCR, B.IP_PARENT_POD_ID, 
  B.IP_DRILL_DOWN, B.IP_TYPE, B.IP_GROUP, B.IP_HEADER, B.IP_FOOTER, 
  B.IP_CACHE_TIME)
WHEN MATCHED THEN
UPDATE SET 
  A.IP_HMO_MODULE = B.IP_HMO_MODULE,
  A.IP_TITLE = B.IP_TITLE,
  A.IP_DESCR = B.IP_DESCR,
  A.IP_PARENT_POD_ID = B.IP_PARENT_POD_ID,
  A.IP_DRILL_DOWN = B.IP_DRILL_DOWN,
  A.IP_TYPE = B.IP_TYPE,
  A.IP_GROUP = B.IP_GROUP,
  A.IP_HEADER = B.IP_HEADER,
  A.IP_FOOTER = B.IP_FOOTER,
  A.IP_CACHE_TIME = B.IP_CACHE_TIME;

MERGE INTO IM_PODS A USING
 (SELECT
  4024 as IP_ID,
  'WPR_4_1_5_DD1_5A' as IP_HMO_MODULE,
  'Community Area: &P6_PARAM2. for &P6_PARAM3.' as IP_TITLE,
  'Average end to end times(days) of completed tickets(works Order Date Instructed - Date Completed date)' as IP_DESCR,
  'WPR_4_1_5_TOP_5A' as IP_PARENT_POD_ID,
  'N' as IP_DRILL_DOWN,
  'Table' as IP_TYPE,
  'Performance Reports' as IP_GROUP,
  'Average number of days to complete potholes.' as IP_HEADER,
  NULL as IP_FOOTER,
  0 as IP_CACHE_TIME
  FROM DUAL) B
ON (A.IP_ID = B.IP_ID)
WHEN NOT MATCHED THEN 
INSERT (
  IP_ID, IP_HMO_MODULE, IP_TITLE, IP_DESCR, IP_PARENT_POD_ID, 
  IP_DRILL_DOWN, IP_TYPE, IP_GROUP, IP_HEADER, IP_FOOTER, 
  IP_CACHE_TIME)
VALUES (
  B.IP_ID, B.IP_HMO_MODULE, B.IP_TITLE, B.IP_DESCR, B.IP_PARENT_POD_ID, 
  B.IP_DRILL_DOWN, B.IP_TYPE, B.IP_GROUP, B.IP_HEADER, B.IP_FOOTER, 
  B.IP_CACHE_TIME)
WHEN MATCHED THEN
UPDATE SET 
  A.IP_HMO_MODULE = B.IP_HMO_MODULE,
  A.IP_TITLE = B.IP_TITLE,
  A.IP_DESCR = B.IP_DESCR,
  A.IP_PARENT_POD_ID = B.IP_PARENT_POD_ID,
  A.IP_DRILL_DOWN = B.IP_DRILL_DOWN,
  A.IP_TYPE = B.IP_TYPE,
  A.IP_GROUP = B.IP_GROUP,
  A.IP_HEADER = B.IP_HEADER,
  A.IP_FOOTER = B.IP_FOOTER,
  A.IP_CACHE_TIME = B.IP_CACHE_TIME;

MERGE INTO IM_PODS A USING
 (SELECT
  4025 as IP_ID,
  'WPR_4_1_1_TOP_1A' as IP_HMO_MODULE,
  'Report Set 1 (1A)' as IP_TITLE,
  '% Completed against target time by defect type' as IP_DESCR,
  NULL as IP_PARENT_POD_ID,
  'Y' as IP_DRILL_DOWN,
  'Table' as IP_TYPE,
  'Performance Reports' as IP_GROUP,
  '% Completed against target time by defect type' as IP_HEADER,
  NULL as IP_FOOTER,
  0 as IP_CACHE_TIME
  FROM DUAL) B
ON (A.IP_ID = B.IP_ID)
WHEN NOT MATCHED THEN 
INSERT (
  IP_ID, IP_HMO_MODULE, IP_TITLE, IP_DESCR, IP_PARENT_POD_ID, 
  IP_DRILL_DOWN, IP_TYPE, IP_GROUP, IP_HEADER, IP_FOOTER, 
  IP_CACHE_TIME)
VALUES (
  B.IP_ID, B.IP_HMO_MODULE, B.IP_TITLE, B.IP_DESCR, B.IP_PARENT_POD_ID, 
  B.IP_DRILL_DOWN, B.IP_TYPE, B.IP_GROUP, B.IP_HEADER, B.IP_FOOTER, 
  B.IP_CACHE_TIME)
WHEN MATCHED THEN
UPDATE SET 
  A.IP_HMO_MODULE = B.IP_HMO_MODULE,
  A.IP_TITLE = B.IP_TITLE,
  A.IP_DESCR = B.IP_DESCR,
  A.IP_PARENT_POD_ID = B.IP_PARENT_POD_ID,
  A.IP_DRILL_DOWN = B.IP_DRILL_DOWN,
  A.IP_TYPE = B.IP_TYPE,
  A.IP_GROUP = B.IP_GROUP,
  A.IP_HEADER = B.IP_HEADER,
  A.IP_FOOTER = B.IP_FOOTER,
  A.IP_CACHE_TIME = B.IP_CACHE_TIME;

MERGE INTO IM_PODS A USING
 (SELECT
  4026 as IP_ID,
  'WPR_4_1_1_DD1_1A' as IP_HMO_MODULE,
  'Community Area: &P6_PARAM2. for &P6_PARAM3.' as IP_TITLE,
  '% Completed against target time by defect type' as IP_DESCR,
  'WPR_4_1_1_TOP_1A' as IP_PARENT_POD_ID,
  'N' as IP_DRILL_DOWN,
  'Table' as IP_TYPE,
  'Performance Reports' as IP_GROUP,
  '% Completed against target time by defect type' as IP_HEADER,
  NULL as IP_FOOTER,
  0 as IP_CACHE_TIME
  FROM DUAL) B
ON (A.IP_ID = B.IP_ID)
WHEN NOT MATCHED THEN 
INSERT (
  IP_ID, IP_HMO_MODULE, IP_TITLE, IP_DESCR, IP_PARENT_POD_ID, 
  IP_DRILL_DOWN, IP_TYPE, IP_GROUP, IP_HEADER, IP_FOOTER, 
  IP_CACHE_TIME)
VALUES (
  B.IP_ID, B.IP_HMO_MODULE, B.IP_TITLE, B.IP_DESCR, B.IP_PARENT_POD_ID, 
  B.IP_DRILL_DOWN, B.IP_TYPE, B.IP_GROUP, B.IP_HEADER, B.IP_FOOTER, 
  B.IP_CACHE_TIME)
WHEN MATCHED THEN
UPDATE SET 
  A.IP_HMO_MODULE = B.IP_HMO_MODULE,
  A.IP_TITLE = B.IP_TITLE,
  A.IP_DESCR = B.IP_DESCR,
  A.IP_PARENT_POD_ID = B.IP_PARENT_POD_ID,
  A.IP_DRILL_DOWN = B.IP_DRILL_DOWN,
  A.IP_TYPE = B.IP_TYPE,
  A.IP_GROUP = B.IP_GROUP,
  A.IP_HEADER = B.IP_HEADER,
  A.IP_FOOTER = B.IP_FOOTER,
  A.IP_CACHE_TIME = B.IP_CACHE_TIME;

MERGE INTO IM_PODS A USING
 (SELECT
  4027 as IP_ID,
  'WPR_4_1_1_TOP_1B' as IP_HMO_MODULE,
  'Report Set 1 (1B)' as IP_TITLE,
  'Average number of days to complete by defect type' as IP_DESCR,
  NULL as IP_PARENT_POD_ID,
  'Y' as IP_DRILL_DOWN,
  'Table' as IP_TYPE,
  'Performance Reports' as IP_GROUP,
  'Average number of days to complete by defect type' as IP_HEADER,
  NULL as IP_FOOTER,
  0 as IP_CACHE_TIME
  FROM DUAL) B
ON (A.IP_ID = B.IP_ID)
WHEN NOT MATCHED THEN 
INSERT (
  IP_ID, IP_HMO_MODULE, IP_TITLE, IP_DESCR, IP_PARENT_POD_ID, 
  IP_DRILL_DOWN, IP_TYPE, IP_GROUP, IP_HEADER, IP_FOOTER, 
  IP_CACHE_TIME)
VALUES (
  B.IP_ID, B.IP_HMO_MODULE, B.IP_TITLE, B.IP_DESCR, B.IP_PARENT_POD_ID, 
  B.IP_DRILL_DOWN, B.IP_TYPE, B.IP_GROUP, B.IP_HEADER, B.IP_FOOTER, 
  B.IP_CACHE_TIME)
WHEN MATCHED THEN
UPDATE SET 
  A.IP_HMO_MODULE = B.IP_HMO_MODULE,
  A.IP_TITLE = B.IP_TITLE,
  A.IP_DESCR = B.IP_DESCR,
  A.IP_PARENT_POD_ID = B.IP_PARENT_POD_ID,
  A.IP_DRILL_DOWN = B.IP_DRILL_DOWN,
  A.IP_TYPE = B.IP_TYPE,
  A.IP_GROUP = B.IP_GROUP,
  A.IP_HEADER = B.IP_HEADER,
  A.IP_FOOTER = B.IP_FOOTER,
  A.IP_CACHE_TIME = B.IP_CACHE_TIME;

MERGE INTO IM_PODS A USING
 (SELECT
  4028 as IP_ID,
  'WPR_4_1_1_DD1_1B' as IP_HMO_MODULE,
  'Community Area: &P6_PARAM2. for &P6_PARAM3.' as IP_TITLE,
  'Average end to end times(days) of completed tickets(works Order Date Instructed - Date Completed date)' as IP_DESCR,
  'WPR_4_1_1_TOP_1B' as IP_PARENT_POD_ID,
  'N' as IP_DRILL_DOWN,
  'Table' as IP_TYPE,
  'Performance Reports' as IP_GROUP,
  'Average number of days to complete by defect type' as IP_HEADER,
  NULL as IP_FOOTER,
  0 as IP_CACHE_TIME
  FROM DUAL) B
ON (A.IP_ID = B.IP_ID)
WHEN NOT MATCHED THEN 
INSERT (
  IP_ID, IP_HMO_MODULE, IP_TITLE, IP_DESCR, IP_PARENT_POD_ID, 
  IP_DRILL_DOWN, IP_TYPE, IP_GROUP, IP_HEADER, IP_FOOTER, 
  IP_CACHE_TIME)
VALUES (
  B.IP_ID, B.IP_HMO_MODULE, B.IP_TITLE, B.IP_DESCR, B.IP_PARENT_POD_ID, 
  B.IP_DRILL_DOWN, B.IP_TYPE, B.IP_GROUP, B.IP_HEADER, B.IP_FOOTER, 
  B.IP_CACHE_TIME)
WHEN MATCHED THEN
UPDATE SET 
  A.IP_HMO_MODULE = B.IP_HMO_MODULE,
  A.IP_TITLE = B.IP_TITLE,
  A.IP_DESCR = B.IP_DESCR,
  A.IP_PARENT_POD_ID = B.IP_PARENT_POD_ID,
  A.IP_DRILL_DOWN = B.IP_DRILL_DOWN,
  A.IP_TYPE = B.IP_TYPE,
  A.IP_GROUP = B.IP_GROUP,
  A.IP_HEADER = B.IP_HEADER,
  A.IP_FOOTER = B.IP_FOOTER,
  A.IP_CACHE_TIME = B.IP_CACHE_TIME;

MERGE INTO IM_PODS A USING
 (SELECT
  4029 as IP_ID,
  'WPR_4_1_2_TOP_2A' as IP_HMO_MODULE,
  'Report Set 1 (2A)' as IP_TITLE,
  '% Highway defects completed against target time by priority' as IP_DESCR,
  NULL as IP_PARENT_POD_ID,
  'Y' as IP_DRILL_DOWN,
  'Table' as IP_TYPE,
  'Performance Reports' as IP_GROUP,
  '% Highway defects completed against target time by priority' as IP_HEADER,
  NULL as IP_FOOTER,
  0 as IP_CACHE_TIME
  FROM DUAL) B
ON (A.IP_ID = B.IP_ID)
WHEN NOT MATCHED THEN 
INSERT (
  IP_ID, IP_HMO_MODULE, IP_TITLE, IP_DESCR, IP_PARENT_POD_ID, 
  IP_DRILL_DOWN, IP_TYPE, IP_GROUP, IP_HEADER, IP_FOOTER, 
  IP_CACHE_TIME)
VALUES (
  B.IP_ID, B.IP_HMO_MODULE, B.IP_TITLE, B.IP_DESCR, B.IP_PARENT_POD_ID, 
  B.IP_DRILL_DOWN, B.IP_TYPE, B.IP_GROUP, B.IP_HEADER, B.IP_FOOTER, 
  B.IP_CACHE_TIME)
WHEN MATCHED THEN
UPDATE SET 
  A.IP_HMO_MODULE = B.IP_HMO_MODULE,
  A.IP_TITLE = B.IP_TITLE,
  A.IP_DESCR = B.IP_DESCR,
  A.IP_PARENT_POD_ID = B.IP_PARENT_POD_ID,
  A.IP_DRILL_DOWN = B.IP_DRILL_DOWN,
  A.IP_TYPE = B.IP_TYPE,
  A.IP_GROUP = B.IP_GROUP,
  A.IP_HEADER = B.IP_HEADER,
  A.IP_FOOTER = B.IP_FOOTER,
  A.IP_CACHE_TIME = B.IP_CACHE_TIME;

MERGE INTO IM_PODS A USING
 (SELECT
  4030 as IP_ID,
  'WPR_4_1_2_DD1_2A' as IP_HMO_MODULE,
  'Community Area: &P6_PARAM2. for &P6_PARAM3.' as IP_TITLE,
  '% Highway defects completed against target time by priority' as IP_DESCR,
  'WPR_4_1_2_TOP_2A' as IP_PARENT_POD_ID,
  'N' as IP_DRILL_DOWN,
  'Table' as IP_TYPE,
  'Performance Reports' as IP_GROUP,
  '% Highway defects completed against target time by priority' as IP_HEADER,
  NULL as IP_FOOTER,
  0 as IP_CACHE_TIME
  FROM DUAL) B
ON (A.IP_ID = B.IP_ID)
WHEN NOT MATCHED THEN 
INSERT (
  IP_ID, IP_HMO_MODULE, IP_TITLE, IP_DESCR, IP_PARENT_POD_ID, 
  IP_DRILL_DOWN, IP_TYPE, IP_GROUP, IP_HEADER, IP_FOOTER, 
  IP_CACHE_TIME)
VALUES (
  B.IP_ID, B.IP_HMO_MODULE, B.IP_TITLE, B.IP_DESCR, B.IP_PARENT_POD_ID, 
  B.IP_DRILL_DOWN, B.IP_TYPE, B.IP_GROUP, B.IP_HEADER, B.IP_FOOTER, 
  B.IP_CACHE_TIME)
WHEN MATCHED THEN
UPDATE SET 
  A.IP_HMO_MODULE = B.IP_HMO_MODULE,
  A.IP_TITLE = B.IP_TITLE,
  A.IP_DESCR = B.IP_DESCR,
  A.IP_PARENT_POD_ID = B.IP_PARENT_POD_ID,
  A.IP_DRILL_DOWN = B.IP_DRILL_DOWN,
  A.IP_TYPE = B.IP_TYPE,
  A.IP_GROUP = B.IP_GROUP,
  A.IP_HEADER = B.IP_HEADER,
  A.IP_FOOTER = B.IP_FOOTER,
  A.IP_CACHE_TIME = B.IP_CACHE_TIME;

MERGE INTO IM_PODS A USING
 (SELECT
  4031 as IP_ID,
  'WPR_4_1_2_TOP_2B' as IP_HMO_MODULE,
  'Report Set 1 (2B)' as IP_TITLE,
  '% PEM defects completed against target time' as IP_DESCR,
  NULL as IP_PARENT_POD_ID,
  'Y' as IP_DRILL_DOWN,
  'Table' as IP_TYPE,
  'Performance Reports' as IP_GROUP,
  '% PEM defects completed against target time' as IP_HEADER,
  NULL as IP_FOOTER,
  0 as IP_CACHE_TIME
  FROM DUAL) B
ON (A.IP_ID = B.IP_ID)
WHEN NOT MATCHED THEN 
INSERT (
  IP_ID, IP_HMO_MODULE, IP_TITLE, IP_DESCR, IP_PARENT_POD_ID, 
  IP_DRILL_DOWN, IP_TYPE, IP_GROUP, IP_HEADER, IP_FOOTER, 
  IP_CACHE_TIME)
VALUES (
  B.IP_ID, B.IP_HMO_MODULE, B.IP_TITLE, B.IP_DESCR, B.IP_PARENT_POD_ID, 
  B.IP_DRILL_DOWN, B.IP_TYPE, B.IP_GROUP, B.IP_HEADER, B.IP_FOOTER, 
  B.IP_CACHE_TIME)
WHEN MATCHED THEN
UPDATE SET 
  A.IP_HMO_MODULE = B.IP_HMO_MODULE,
  A.IP_TITLE = B.IP_TITLE,
  A.IP_DESCR = B.IP_DESCR,
  A.IP_PARENT_POD_ID = B.IP_PARENT_POD_ID,
  A.IP_DRILL_DOWN = B.IP_DRILL_DOWN,
  A.IP_TYPE = B.IP_TYPE,
  A.IP_GROUP = B.IP_GROUP,
  A.IP_HEADER = B.IP_HEADER,
  A.IP_FOOTER = B.IP_FOOTER,
  A.IP_CACHE_TIME = B.IP_CACHE_TIME;

MERGE INTO IM_PODS A USING
 (SELECT
  4032 as IP_ID,
  'WPR_4_1_2_DD1_2B' as IP_HMO_MODULE,
  'Community Area: &P6_PARAM2. for &P6_PARAM3.' as IP_TITLE,
  '% PEM defects completed against target time' as IP_DESCR,
  'WPR_4_1_2_TOP_2B' as IP_PARENT_POD_ID,
  'N' as IP_DRILL_DOWN,
  'Table' as IP_TYPE,
  'Performance Reports' as IP_GROUP,
  '% PEM defects completed against target time.' as IP_HEADER,
  NULL as IP_FOOTER,
  0 as IP_CACHE_TIME
  FROM DUAL) B
ON (A.IP_ID = B.IP_ID)
WHEN NOT MATCHED THEN 
INSERT (
  IP_ID, IP_HMO_MODULE, IP_TITLE, IP_DESCR, IP_PARENT_POD_ID, 
  IP_DRILL_DOWN, IP_TYPE, IP_GROUP, IP_HEADER, IP_FOOTER, 
  IP_CACHE_TIME)
VALUES (
  B.IP_ID, B.IP_HMO_MODULE, B.IP_TITLE, B.IP_DESCR, B.IP_PARENT_POD_ID, 
  B.IP_DRILL_DOWN, B.IP_TYPE, B.IP_GROUP, B.IP_HEADER, B.IP_FOOTER, 
  B.IP_CACHE_TIME)
WHEN MATCHED THEN
UPDATE SET 
  A.IP_HMO_MODULE = B.IP_HMO_MODULE,
  A.IP_TITLE = B.IP_TITLE,
  A.IP_DESCR = B.IP_DESCR,
  A.IP_PARENT_POD_ID = B.IP_PARENT_POD_ID,
  A.IP_DRILL_DOWN = B.IP_DRILL_DOWN,
  A.IP_TYPE = B.IP_TYPE,
  A.IP_GROUP = B.IP_GROUP,
  A.IP_HEADER = B.IP_HEADER,
  A.IP_FOOTER = B.IP_FOOTER,
  A.IP_CACHE_TIME = B.IP_CACHE_TIME;

MERGE INTO IM_PODS A USING
 (SELECT
  4033 as IP_ID,
  'WPR_4_1_3_TOP_3A' as IP_HMO_MODULE,
  'Report Set 1 (3A)' as IP_TITLE,
  'Average number of days to complete highway defects by priority' as IP_DESCR,
  NULL as IP_PARENT_POD_ID,
  'Y' as IP_DRILL_DOWN,
  'Table' as IP_TYPE,
  'Performance Reports' as IP_GROUP,
  'Average number of days to complete highway defects by priority' as IP_HEADER,
  NULL as IP_FOOTER,
  0 as IP_CACHE_TIME
  FROM DUAL) B
ON (A.IP_ID = B.IP_ID)
WHEN NOT MATCHED THEN 
INSERT (
  IP_ID, IP_HMO_MODULE, IP_TITLE, IP_DESCR, IP_PARENT_POD_ID, 
  IP_DRILL_DOWN, IP_TYPE, IP_GROUP, IP_HEADER, IP_FOOTER, 
  IP_CACHE_TIME)
VALUES (
  B.IP_ID, B.IP_HMO_MODULE, B.IP_TITLE, B.IP_DESCR, B.IP_PARENT_POD_ID, 
  B.IP_DRILL_DOWN, B.IP_TYPE, B.IP_GROUP, B.IP_HEADER, B.IP_FOOTER, 
  B.IP_CACHE_TIME)
WHEN MATCHED THEN
UPDATE SET 
  A.IP_HMO_MODULE = B.IP_HMO_MODULE,
  A.IP_TITLE = B.IP_TITLE,
  A.IP_DESCR = B.IP_DESCR,
  A.IP_PARENT_POD_ID = B.IP_PARENT_POD_ID,
  A.IP_DRILL_DOWN = B.IP_DRILL_DOWN,
  A.IP_TYPE = B.IP_TYPE,
  A.IP_GROUP = B.IP_GROUP,
  A.IP_HEADER = B.IP_HEADER,
  A.IP_FOOTER = B.IP_FOOTER,
  A.IP_CACHE_TIME = B.IP_CACHE_TIME;

MERGE INTO IM_PODS A USING
 (SELECT
  4034 as IP_ID,
  'WPR_4_1_3_DD1_3A' as IP_HMO_MODULE,
  'Community Area: &P6_PARAM2. for &P6_PARAM3.' as IP_TITLE,
  'Average end to end times(days) of completed tickets(works Order Date Instructed - Date Completed date)' as IP_DESCR,
  'WPR_4_1_3_TOP_3A' as IP_PARENT_POD_ID,
  'N' as IP_DRILL_DOWN,
  'Table' as IP_TYPE,
  'Performance Reports' as IP_GROUP,
  'Average number of days to complete highway defects by priority.' as IP_HEADER,
  NULL as IP_FOOTER,
  0 as IP_CACHE_TIME
  FROM DUAL) B
ON (A.IP_ID = B.IP_ID)
WHEN NOT MATCHED THEN 
INSERT (
  IP_ID, IP_HMO_MODULE, IP_TITLE, IP_DESCR, IP_PARENT_POD_ID, 
  IP_DRILL_DOWN, IP_TYPE, IP_GROUP, IP_HEADER, IP_FOOTER, 
  IP_CACHE_TIME)
VALUES (
  B.IP_ID, B.IP_HMO_MODULE, B.IP_TITLE, B.IP_DESCR, B.IP_PARENT_POD_ID, 
  B.IP_DRILL_DOWN, B.IP_TYPE, B.IP_GROUP, B.IP_HEADER, B.IP_FOOTER, 
  B.IP_CACHE_TIME)
WHEN MATCHED THEN
UPDATE SET 
  A.IP_HMO_MODULE = B.IP_HMO_MODULE,
  A.IP_TITLE = B.IP_TITLE,
  A.IP_DESCR = B.IP_DESCR,
  A.IP_PARENT_POD_ID = B.IP_PARENT_POD_ID,
  A.IP_DRILL_DOWN = B.IP_DRILL_DOWN,
  A.IP_TYPE = B.IP_TYPE,
  A.IP_GROUP = B.IP_GROUP,
  A.IP_HEADER = B.IP_HEADER,
  A.IP_FOOTER = B.IP_FOOTER,
  A.IP_CACHE_TIME = B.IP_CACHE_TIME;

MERGE INTO IM_PODS A USING
 (SELECT
  4035 as IP_ID,
  'WPR_4_1_3_TOP_3B' as IP_HMO_MODULE,
  'Report Set 1 (3B)' as IP_TITLE,
  'Average number of days to complete PEM defects' as IP_DESCR,
  NULL as IP_PARENT_POD_ID,
  'Y' as IP_DRILL_DOWN,
  'Table' as IP_TYPE,
  'Performance Reports' as IP_GROUP,
  'Average number of days to complete PEM defects' as IP_HEADER,
  NULL as IP_FOOTER,
  0 as IP_CACHE_TIME
  FROM DUAL) B
ON (A.IP_ID = B.IP_ID)
WHEN NOT MATCHED THEN 
INSERT (
  IP_ID, IP_HMO_MODULE, IP_TITLE, IP_DESCR, IP_PARENT_POD_ID, 
  IP_DRILL_DOWN, IP_TYPE, IP_GROUP, IP_HEADER, IP_FOOTER, 
  IP_CACHE_TIME)
VALUES (
  B.IP_ID, B.IP_HMO_MODULE, B.IP_TITLE, B.IP_DESCR, B.IP_PARENT_POD_ID, 
  B.IP_DRILL_DOWN, B.IP_TYPE, B.IP_GROUP, B.IP_HEADER, B.IP_FOOTER, 
  B.IP_CACHE_TIME)
WHEN MATCHED THEN
UPDATE SET 
  A.IP_HMO_MODULE = B.IP_HMO_MODULE,
  A.IP_TITLE = B.IP_TITLE,
  A.IP_DESCR = B.IP_DESCR,
  A.IP_PARENT_POD_ID = B.IP_PARENT_POD_ID,
  A.IP_DRILL_DOWN = B.IP_DRILL_DOWN,
  A.IP_TYPE = B.IP_TYPE,
  A.IP_GROUP = B.IP_GROUP,
  A.IP_HEADER = B.IP_HEADER,
  A.IP_FOOTER = B.IP_FOOTER,
  A.IP_CACHE_TIME = B.IP_CACHE_TIME;

MERGE INTO IM_PODS A USING
 (SELECT
  4036 as IP_ID,
  'WPR_4_1_3_DD1_3B' as IP_HMO_MODULE,
  'Community Area: &P6_PARAM2. for &P6_PARAM3.' as IP_TITLE,
  'Average end to end times(days) of completed tickets(works Order Date Instructed - Date Completed date)' as IP_DESCR,
  'WPR_4_1_3_TOP_3B' as IP_PARENT_POD_ID,
  'N' as IP_DRILL_DOWN,
  'Table' as IP_TYPE,
  'Performance Reports' as IP_GROUP,
  'Average number of days to complete PEM defects.' as IP_HEADER,
  NULL as IP_FOOTER,
  0 as IP_CACHE_TIME
  FROM DUAL) B
ON (A.IP_ID = B.IP_ID)
WHEN NOT MATCHED THEN 
INSERT (
  IP_ID, IP_HMO_MODULE, IP_TITLE, IP_DESCR, IP_PARENT_POD_ID, 
  IP_DRILL_DOWN, IP_TYPE, IP_GROUP, IP_HEADER, IP_FOOTER, 
  IP_CACHE_TIME)
VALUES (
  B.IP_ID, B.IP_HMO_MODULE, B.IP_TITLE, B.IP_DESCR, B.IP_PARENT_POD_ID, 
  B.IP_DRILL_DOWN, B.IP_TYPE, B.IP_GROUP, B.IP_HEADER, B.IP_FOOTER, 
  B.IP_CACHE_TIME)
WHEN MATCHED THEN
UPDATE SET 
  A.IP_HMO_MODULE = B.IP_HMO_MODULE,
  A.IP_TITLE = B.IP_TITLE,
  A.IP_DESCR = B.IP_DESCR,
  A.IP_PARENT_POD_ID = B.IP_PARENT_POD_ID,
  A.IP_DRILL_DOWN = B.IP_DRILL_DOWN,
  A.IP_TYPE = B.IP_TYPE,
  A.IP_GROUP = B.IP_GROUP,
  A.IP_HEADER = B.IP_HEADER,
  A.IP_FOOTER = B.IP_FOOTER,
  A.IP_CACHE_TIME = B.IP_CACHE_TIME;

MERGE INTO IM_PODS A USING
 (SELECT
  4037 as IP_ID,
  'WPR_4_2_2_TOP_1A' as IP_HMO_MODULE,
  'Report Set 2 (1A)' as IP_TITLE,
  'Pothole Repair Performance.' as IP_DESCR,
  NULL as IP_PARENT_POD_ID,
  'Y' as IP_DRILL_DOWN,
  'Table' as IP_TYPE,
  'Performance Reports' as IP_GROUP,
  'Pothole Repair Performance.' as IP_HEADER,
  NULL as IP_FOOTER,
  0 as IP_CACHE_TIME
  FROM DUAL) B
ON (A.IP_ID = B.IP_ID)
WHEN NOT MATCHED THEN 
INSERT (
  IP_ID, IP_HMO_MODULE, IP_TITLE, IP_DESCR, IP_PARENT_POD_ID, 
  IP_DRILL_DOWN, IP_TYPE, IP_GROUP, IP_HEADER, IP_FOOTER, 
  IP_CACHE_TIME)
VALUES (
  B.IP_ID, B.IP_HMO_MODULE, B.IP_TITLE, B.IP_DESCR, B.IP_PARENT_POD_ID, 
  B.IP_DRILL_DOWN, B.IP_TYPE, B.IP_GROUP, B.IP_HEADER, B.IP_FOOTER, 
  B.IP_CACHE_TIME)
WHEN MATCHED THEN
UPDATE SET 
  A.IP_HMO_MODULE = B.IP_HMO_MODULE,
  A.IP_TITLE = B.IP_TITLE,
  A.IP_DESCR = B.IP_DESCR,
  A.IP_PARENT_POD_ID = B.IP_PARENT_POD_ID,
  A.IP_DRILL_DOWN = B.IP_DRILL_DOWN,
  A.IP_TYPE = B.IP_TYPE,
  A.IP_GROUP = B.IP_GROUP,
  A.IP_HEADER = B.IP_HEADER,
  A.IP_FOOTER = B.IP_FOOTER,
  A.IP_CACHE_TIME = B.IP_CACHE_TIME;

MERGE INTO IM_PODS A USING
 (SELECT
  4038 as IP_ID,
  'WPR_4_2_2_DD1_1A' as IP_HMO_MODULE,
  'Community Area: &P6_PARAM2. for &P6_PARAM3.' as IP_TITLE,
  'Pothole Repair Performance.' as IP_DESCR,
  'WPR_4_2_2_TOP_1A' as IP_PARENT_POD_ID,
  'Y' as IP_DRILL_DOWN,
  'Table' as IP_TYPE,
  'Performance Reports' as IP_GROUP,
  'Pothole Repair Performance.' as IP_HEADER,
  NULL as IP_FOOTER,
  0 as IP_CACHE_TIME
  FROM DUAL) B
ON (A.IP_ID = B.IP_ID)
WHEN NOT MATCHED THEN 
INSERT (
  IP_ID, IP_HMO_MODULE, IP_TITLE, IP_DESCR, IP_PARENT_POD_ID, 
  IP_DRILL_DOWN, IP_TYPE, IP_GROUP, IP_HEADER, IP_FOOTER, 
  IP_CACHE_TIME)
VALUES (
  B.IP_ID, B.IP_HMO_MODULE, B.IP_TITLE, B.IP_DESCR, B.IP_PARENT_POD_ID, 
  B.IP_DRILL_DOWN, B.IP_TYPE, B.IP_GROUP, B.IP_HEADER, B.IP_FOOTER, 
  B.IP_CACHE_TIME)
WHEN MATCHED THEN
UPDATE SET 
  A.IP_HMO_MODULE = B.IP_HMO_MODULE,
  A.IP_TITLE = B.IP_TITLE,
  A.IP_DESCR = B.IP_DESCR,
  A.IP_PARENT_POD_ID = B.IP_PARENT_POD_ID,
  A.IP_DRILL_DOWN = B.IP_DRILL_DOWN,
  A.IP_TYPE = B.IP_TYPE,
  A.IP_GROUP = B.IP_GROUP,
  A.IP_HEADER = B.IP_HEADER,
  A.IP_FOOTER = B.IP_FOOTER,
  A.IP_CACHE_TIME = B.IP_CACHE_TIME;

MERGE INTO IM_PODS A USING
 (SELECT
  4039 as IP_ID,
  'WPR_4_2_2_TOP_1B' as IP_HMO_MODULE,
  'Report Set 2 (Find and Fix)' as IP_TITLE,
  'Find and Fix.' as IP_DESCR,
  NULL as IP_PARENT_POD_ID,
  'Y' as IP_DRILL_DOWN,
  'Table' as IP_TYPE,
  'Performance Reports' as IP_GROUP,
  'Find and Fix.' as IP_HEADER,
  NULL as IP_FOOTER,
  0 as IP_CACHE_TIME
  FROM DUAL) B
ON (A.IP_ID = B.IP_ID)
WHEN NOT MATCHED THEN 
INSERT (
  IP_ID, IP_HMO_MODULE, IP_TITLE, IP_DESCR, IP_PARENT_POD_ID, 
  IP_DRILL_DOWN, IP_TYPE, IP_GROUP, IP_HEADER, IP_FOOTER, 
  IP_CACHE_TIME)
VALUES (
  B.IP_ID, B.IP_HMO_MODULE, B.IP_TITLE, B.IP_DESCR, B.IP_PARENT_POD_ID, 
  B.IP_DRILL_DOWN, B.IP_TYPE, B.IP_GROUP, B.IP_HEADER, B.IP_FOOTER, 
  B.IP_CACHE_TIME)
WHEN MATCHED THEN
UPDATE SET 
  A.IP_HMO_MODULE = B.IP_HMO_MODULE,
  A.IP_TITLE = B.IP_TITLE,
  A.IP_DESCR = B.IP_DESCR,
  A.IP_PARENT_POD_ID = B.IP_PARENT_POD_ID,
  A.IP_DRILL_DOWN = B.IP_DRILL_DOWN,
  A.IP_TYPE = B.IP_TYPE,
  A.IP_GROUP = B.IP_GROUP,
  A.IP_HEADER = B.IP_HEADER,
  A.IP_FOOTER = B.IP_FOOTER,
  A.IP_CACHE_TIME = B.IP_CACHE_TIME;

MERGE INTO IM_PODS A USING
 (SELECT
  4040 as IP_ID,
  'WPR_4_2_2_DD1_1B' as IP_HMO_MODULE,
  'Community Area: &P6_PARAM2.' as IP_TITLE,
  'Find and Fix.' as IP_DESCR,
  'WPR_4_2_2_TOP_1B' as IP_PARENT_POD_ID,
  'N' as IP_DRILL_DOWN,
  'Table' as IP_TYPE,
  'Performance Reports' as IP_GROUP,
  'Find and Fix.' as IP_HEADER,
  NULL as IP_FOOTER,
  0 as IP_CACHE_TIME
  FROM DUAL) B
ON (A.IP_ID = B.IP_ID)
WHEN NOT MATCHED THEN 
INSERT (
  IP_ID, IP_HMO_MODULE, IP_TITLE, IP_DESCR, IP_PARENT_POD_ID, 
  IP_DRILL_DOWN, IP_TYPE, IP_GROUP, IP_HEADER, IP_FOOTER, 
  IP_CACHE_TIME)
VALUES (
  B.IP_ID, B.IP_HMO_MODULE, B.IP_TITLE, B.IP_DESCR, B.IP_PARENT_POD_ID, 
  B.IP_DRILL_DOWN, B.IP_TYPE, B.IP_GROUP, B.IP_HEADER, B.IP_FOOTER, 
  B.IP_CACHE_TIME)
WHEN MATCHED THEN
UPDATE SET 
  A.IP_HMO_MODULE = B.IP_HMO_MODULE,
  A.IP_TITLE = B.IP_TITLE,
  A.IP_DESCR = B.IP_DESCR,
  A.IP_PARENT_POD_ID = B.IP_PARENT_POD_ID,
  A.IP_DRILL_DOWN = B.IP_DRILL_DOWN,
  A.IP_TYPE = B.IP_TYPE,
  A.IP_GROUP = B.IP_GROUP,
  A.IP_HEADER = B.IP_HEADER,
  A.IP_FOOTER = B.IP_FOOTER,
  A.IP_CACHE_TIME = B.IP_CACHE_TIME;

MERGE INTO IM_PODS A USING
 (SELECT
  4041 as IP_ID,
  'WPR_4_2_2_TOP_1C' as IP_HMO_MODULE,
  'Report Set 2 (Reactive Attendance)' as IP_TITLE,
  'Reactive Attendance.' as IP_DESCR,
  NULL as IP_PARENT_POD_ID,
  'Y' as IP_DRILL_DOWN,
  'Table' as IP_TYPE,
  'Performance Reports' as IP_GROUP,
  'Reactive Attendance.' as IP_HEADER,
  NULL as IP_FOOTER,
  0 as IP_CACHE_TIME
  FROM DUAL) B
ON (A.IP_ID = B.IP_ID)
WHEN NOT MATCHED THEN 
INSERT (
  IP_ID, IP_HMO_MODULE, IP_TITLE, IP_DESCR, IP_PARENT_POD_ID, 
  IP_DRILL_DOWN, IP_TYPE, IP_GROUP, IP_HEADER, IP_FOOTER, 
  IP_CACHE_TIME)
VALUES (
  B.IP_ID, B.IP_HMO_MODULE, B.IP_TITLE, B.IP_DESCR, B.IP_PARENT_POD_ID, 
  B.IP_DRILL_DOWN, B.IP_TYPE, B.IP_GROUP, B.IP_HEADER, B.IP_FOOTER, 
  B.IP_CACHE_TIME)
WHEN MATCHED THEN
UPDATE SET 
  A.IP_HMO_MODULE = B.IP_HMO_MODULE,
  A.IP_TITLE = B.IP_TITLE,
  A.IP_DESCR = B.IP_DESCR,
  A.IP_PARENT_POD_ID = B.IP_PARENT_POD_ID,
  A.IP_DRILL_DOWN = B.IP_DRILL_DOWN,
  A.IP_TYPE = B.IP_TYPE,
  A.IP_GROUP = B.IP_GROUP,
  A.IP_HEADER = B.IP_HEADER,
  A.IP_FOOTER = B.IP_FOOTER,
  A.IP_CACHE_TIME = B.IP_CACHE_TIME;

MERGE INTO IM_PODS A USING
 (SELECT
  4042 as IP_ID,
  'WPR_4_2_2_DD1_1C' as IP_HMO_MODULE,
  'Community Area: &P6_PARAM2. for &P6_PARAM3.' as IP_TITLE,
  'Reactive Attendance.' as IP_DESCR,
  'WPR_4_2_2_TOP_1C' as IP_PARENT_POD_ID,
  'N' as IP_DRILL_DOWN,
  'Table' as IP_TYPE,
  'Performance Reports' as IP_GROUP,
  'Reactive Attendance.' as IP_HEADER,
  NULL as IP_FOOTER,
  0 as IP_CACHE_TIME
  FROM DUAL) B
ON (A.IP_ID = B.IP_ID)
WHEN NOT MATCHED THEN 
INSERT (
  IP_ID, IP_HMO_MODULE, IP_TITLE, IP_DESCR, IP_PARENT_POD_ID, 
  IP_DRILL_DOWN, IP_TYPE, IP_GROUP, IP_HEADER, IP_FOOTER, 
  IP_CACHE_TIME)
VALUES (
  B.IP_ID, B.IP_HMO_MODULE, B.IP_TITLE, B.IP_DESCR, B.IP_PARENT_POD_ID, 
  B.IP_DRILL_DOWN, B.IP_TYPE, B.IP_GROUP, B.IP_HEADER, B.IP_FOOTER, 
  B.IP_CACHE_TIME)
WHEN MATCHED THEN
UPDATE SET 
  A.IP_HMO_MODULE = B.IP_HMO_MODULE,
  A.IP_TITLE = B.IP_TITLE,
  A.IP_DESCR = B.IP_DESCR,
  A.IP_PARENT_POD_ID = B.IP_PARENT_POD_ID,
  A.IP_DRILL_DOWN = B.IP_DRILL_DOWN,
  A.IP_TYPE = B.IP_TYPE,
  A.IP_GROUP = B.IP_GROUP,
  A.IP_HEADER = B.IP_HEADER,
  A.IP_FOOTER = B.IP_FOOTER,
  A.IP_CACHE_TIME = B.IP_CACHE_TIME;

MERGE INTO IM_PODS A USING
 (SELECT
  4043 as IP_ID,
  'WPR_4_3_1_TOP_7A' as IP_HMO_MODULE,
  'Report Set 3 (7A)' as IP_TITLE,
  'Average number of days to instruct by defect type' as IP_DESCR,
  NULL as IP_PARENT_POD_ID,
  'Y' as IP_DRILL_DOWN,
  'Table' as IP_TYPE,
  'Performance Reports' as IP_GROUP,
  'Average number of days to instruct by defect type' as IP_HEADER,
  NULL as IP_FOOTER,
  0 as IP_CACHE_TIME
  FROM DUAL) B
ON (A.IP_ID = B.IP_ID)
WHEN NOT MATCHED THEN 
INSERT (
  IP_ID, IP_HMO_MODULE, IP_TITLE, IP_DESCR, IP_PARENT_POD_ID, 
  IP_DRILL_DOWN, IP_TYPE, IP_GROUP, IP_HEADER, IP_FOOTER, 
  IP_CACHE_TIME)
VALUES (
  B.IP_ID, B.IP_HMO_MODULE, B.IP_TITLE, B.IP_DESCR, B.IP_PARENT_POD_ID, 
  B.IP_DRILL_DOWN, B.IP_TYPE, B.IP_GROUP, B.IP_HEADER, B.IP_FOOTER, 
  B.IP_CACHE_TIME)
WHEN MATCHED THEN
UPDATE SET 
  A.IP_HMO_MODULE = B.IP_HMO_MODULE,
  A.IP_TITLE = B.IP_TITLE,
  A.IP_DESCR = B.IP_DESCR,
  A.IP_PARENT_POD_ID = B.IP_PARENT_POD_ID,
  A.IP_DRILL_DOWN = B.IP_DRILL_DOWN,
  A.IP_TYPE = B.IP_TYPE,
  A.IP_GROUP = B.IP_GROUP,
  A.IP_HEADER = B.IP_HEADER,
  A.IP_FOOTER = B.IP_FOOTER,
  A.IP_CACHE_TIME = B.IP_CACHE_TIME;

MERGE INTO IM_PODS A USING
 (SELECT
  4044 as IP_ID,
  'WPR_4_3_1_DD1_7A' as IP_HMO_MODULE,
  'Community Area: &P6_PARAM2. for &P6_PARAM3.' as IP_TITLE,
  'Average end to end time(days) of completed tickets. DR-DI (Date recorded - Date instructed). DR-DC (Date recorded - Date completed) DI-DC (Date instructed - Date completed)' as IP_DESCR,
  'WPR_4_3_1_TOP_7A' as IP_PARENT_POD_ID,
  'N' as IP_DRILL_DOWN,
  'Table' as IP_TYPE,
  'Performance Reports' as IP_GROUP,
  'Average number of days to instruct by defect type' as IP_HEADER,
  NULL as IP_FOOTER,
  0 as IP_CACHE_TIME
  FROM DUAL) B
ON (A.IP_ID = B.IP_ID)
WHEN NOT MATCHED THEN 
INSERT (
  IP_ID, IP_HMO_MODULE, IP_TITLE, IP_DESCR, IP_PARENT_POD_ID, 
  IP_DRILL_DOWN, IP_TYPE, IP_GROUP, IP_HEADER, IP_FOOTER, 
  IP_CACHE_TIME)
VALUES (
  B.IP_ID, B.IP_HMO_MODULE, B.IP_TITLE, B.IP_DESCR, B.IP_PARENT_POD_ID, 
  B.IP_DRILL_DOWN, B.IP_TYPE, B.IP_GROUP, B.IP_HEADER, B.IP_FOOTER, 
  B.IP_CACHE_TIME)
WHEN MATCHED THEN
UPDATE SET 
  A.IP_HMO_MODULE = B.IP_HMO_MODULE,
  A.IP_TITLE = B.IP_TITLE,
  A.IP_DESCR = B.IP_DESCR,
  A.IP_PARENT_POD_ID = B.IP_PARENT_POD_ID,
  A.IP_DRILL_DOWN = B.IP_DRILL_DOWN,
  A.IP_TYPE = B.IP_TYPE,
  A.IP_GROUP = B.IP_GROUP,
  A.IP_HEADER = B.IP_HEADER,
  A.IP_FOOTER = B.IP_FOOTER,
  A.IP_CACHE_TIME = B.IP_CACHE_TIME;

MERGE INTO IM_PODS A USING
 (SELECT
  4045 as IP_ID,
  'WPR_4_3_2_TOP_7B' as IP_HMO_MODULE,
  'Report Set 3 (7B)' as IP_TITLE,
  'Average number of days to instruct highway defects.' as IP_DESCR,
  NULL as IP_PARENT_POD_ID,
  'Y' as IP_DRILL_DOWN,
  'Table' as IP_TYPE,
  'Performance Reports' as IP_GROUP,
  'Average number of days to instruct highway defects' as IP_HEADER,
  NULL as IP_FOOTER,
  0 as IP_CACHE_TIME
  FROM DUAL) B
ON (A.IP_ID = B.IP_ID)
WHEN NOT MATCHED THEN 
INSERT (
  IP_ID, IP_HMO_MODULE, IP_TITLE, IP_DESCR, IP_PARENT_POD_ID, 
  IP_DRILL_DOWN, IP_TYPE, IP_GROUP, IP_HEADER, IP_FOOTER, 
  IP_CACHE_TIME)
VALUES (
  B.IP_ID, B.IP_HMO_MODULE, B.IP_TITLE, B.IP_DESCR, B.IP_PARENT_POD_ID, 
  B.IP_DRILL_DOWN, B.IP_TYPE, B.IP_GROUP, B.IP_HEADER, B.IP_FOOTER, 
  B.IP_CACHE_TIME)
WHEN MATCHED THEN
UPDATE SET 
  A.IP_HMO_MODULE = B.IP_HMO_MODULE,
  A.IP_TITLE = B.IP_TITLE,
  A.IP_DESCR = B.IP_DESCR,
  A.IP_PARENT_POD_ID = B.IP_PARENT_POD_ID,
  A.IP_DRILL_DOWN = B.IP_DRILL_DOWN,
  A.IP_TYPE = B.IP_TYPE,
  A.IP_GROUP = B.IP_GROUP,
  A.IP_HEADER = B.IP_HEADER,
  A.IP_FOOTER = B.IP_FOOTER,
  A.IP_CACHE_TIME = B.IP_CACHE_TIME;

MERGE INTO IM_PODS A USING
 (SELECT
  4046 as IP_ID,
  'WPR_4_3_2_DD1_7B' as IP_HMO_MODULE,
  'Community Area: &P6_PARAM2. for &P6_PARAM3.' as IP_TITLE,
  'Average end to end time(days) of completed tickets. DR-DI (Date recorded - Date instructed). DR-DC (Date recorded - Date completed) DI-DC (Date instructed - Date completed)' as IP_DESCR,
  'WPR_4_3_2_TOP_7B' as IP_PARENT_POD_ID,
  'N' as IP_DRILL_DOWN,
  'Table' as IP_TYPE,
  'Performance Reports' as IP_GROUP,
  'Average number of days to instruct highway defects.' as IP_HEADER,
  NULL as IP_FOOTER,
  0 as IP_CACHE_TIME
  FROM DUAL) B
ON (A.IP_ID = B.IP_ID)
WHEN NOT MATCHED THEN 
INSERT (
  IP_ID, IP_HMO_MODULE, IP_TITLE, IP_DESCR, IP_PARENT_POD_ID, 
  IP_DRILL_DOWN, IP_TYPE, IP_GROUP, IP_HEADER, IP_FOOTER, 
  IP_CACHE_TIME)
VALUES (
  B.IP_ID, B.IP_HMO_MODULE, B.IP_TITLE, B.IP_DESCR, B.IP_PARENT_POD_ID, 
  B.IP_DRILL_DOWN, B.IP_TYPE, B.IP_GROUP, B.IP_HEADER, B.IP_FOOTER, 
  B.IP_CACHE_TIME)
WHEN MATCHED THEN
UPDATE SET 
  A.IP_HMO_MODULE = B.IP_HMO_MODULE,
  A.IP_TITLE = B.IP_TITLE,
  A.IP_DESCR = B.IP_DESCR,
  A.IP_PARENT_POD_ID = B.IP_PARENT_POD_ID,
  A.IP_DRILL_DOWN = B.IP_DRILL_DOWN,
  A.IP_TYPE = B.IP_TYPE,
  A.IP_GROUP = B.IP_GROUP,
  A.IP_HEADER = B.IP_HEADER,
  A.IP_FOOTER = B.IP_FOOTER,
  A.IP_CACHE_TIME = B.IP_CACHE_TIME;

MERGE INTO IM_PODS A USING
 (SELECT
  4047 as IP_ID,
  'WPR_4_3_3_TOP_7C' as IP_HMO_MODULE,
  'Report Set 3 (7C)' as IP_TITLE,
  'Average number of days to instruct PEM defects.' as IP_DESCR,
  NULL as IP_PARENT_POD_ID,
  'Y' as IP_DRILL_DOWN,
  'Table' as IP_TYPE,
  'Performance Reports' as IP_GROUP,
  'Average number of days to instruct PEM defects.' as IP_HEADER,
  NULL as IP_FOOTER,
  0 as IP_CACHE_TIME
  FROM DUAL) B
ON (A.IP_ID = B.IP_ID)
WHEN NOT MATCHED THEN 
INSERT (
  IP_ID, IP_HMO_MODULE, IP_TITLE, IP_DESCR, IP_PARENT_POD_ID, 
  IP_DRILL_DOWN, IP_TYPE, IP_GROUP, IP_HEADER, IP_FOOTER, 
  IP_CACHE_TIME)
VALUES (
  B.IP_ID, B.IP_HMO_MODULE, B.IP_TITLE, B.IP_DESCR, B.IP_PARENT_POD_ID, 
  B.IP_DRILL_DOWN, B.IP_TYPE, B.IP_GROUP, B.IP_HEADER, B.IP_FOOTER, 
  B.IP_CACHE_TIME)
WHEN MATCHED THEN
UPDATE SET 
  A.IP_HMO_MODULE = B.IP_HMO_MODULE,
  A.IP_TITLE = B.IP_TITLE,
  A.IP_DESCR = B.IP_DESCR,
  A.IP_PARENT_POD_ID = B.IP_PARENT_POD_ID,
  A.IP_DRILL_DOWN = B.IP_DRILL_DOWN,
  A.IP_TYPE = B.IP_TYPE,
  A.IP_GROUP = B.IP_GROUP,
  A.IP_HEADER = B.IP_HEADER,
  A.IP_FOOTER = B.IP_FOOTER,
  A.IP_CACHE_TIME = B.IP_CACHE_TIME;

MERGE INTO IM_PODS A USING
 (SELECT
  4048 as IP_ID,
  'WPR_4_3_3_DD1_7C' as IP_HMO_MODULE,
  'Community Area: &P6_PARAM2. for &P6_PARAM3.' as IP_TITLE,
  'Average end to end time(days) of completed tickets. DR-DI (Date recorded - Date instructed), DR-DC (Date recorded - Date completed), DI-DC (Date instructed - Date completed).' as IP_DESCR,
  'WPR_4_3_3_TOP_7C' as IP_PARENT_POD_ID,
  'Y' as IP_DRILL_DOWN,
  'Table' as IP_TYPE,
  'Performance Reports' as IP_GROUP,
  'Average number of days to instruct PEM defects.' as IP_HEADER,
  NULL as IP_FOOTER,
  0 as IP_CACHE_TIME
  FROM DUAL) B
ON (A.IP_ID = B.IP_ID)
WHEN NOT MATCHED THEN 
INSERT (
  IP_ID, IP_HMO_MODULE, IP_TITLE, IP_DESCR, IP_PARENT_POD_ID, 
  IP_DRILL_DOWN, IP_TYPE, IP_GROUP, IP_HEADER, IP_FOOTER, 
  IP_CACHE_TIME)
VALUES (
  B.IP_ID, B.IP_HMO_MODULE, B.IP_TITLE, B.IP_DESCR, B.IP_PARENT_POD_ID, 
  B.IP_DRILL_DOWN, B.IP_TYPE, B.IP_GROUP, B.IP_HEADER, B.IP_FOOTER, 
  B.IP_CACHE_TIME)
WHEN MATCHED THEN
UPDATE SET 
  A.IP_HMO_MODULE = B.IP_HMO_MODULE,
  A.IP_TITLE = B.IP_TITLE,
  A.IP_DESCR = B.IP_DESCR,
  A.IP_PARENT_POD_ID = B.IP_PARENT_POD_ID,
  A.IP_DRILL_DOWN = B.IP_DRILL_DOWN,
  A.IP_TYPE = B.IP_TYPE,
  A.IP_GROUP = B.IP_GROUP,
  A.IP_HEADER = B.IP_HEADER,
  A.IP_FOOTER = B.IP_FOOTER,
  A.IP_CACHE_TIME = B.IP_CACHE_TIME;

COMMIT;
